{"name":"GPGMK","tagline":"A GPU powered, 3D geometric modeling kernel","body":"## Introduction\r\nGeometric modeling kernels play an important role in modern CAD systems. They are the core of modern CAD systems, providing geometric modeling algorithms, and base classes to store and implement constructive solid geometry objects. Without them, modern CAD applications most likely would not exist in their current state.\r\n\r\nHowever, current geometric modeling kernels are heavily CPU based, and currently are not optimized for parallel processing even on CPUs. The algorithms implemented in these systems are commonly implemented in parallel for performance benefits, but lack support for GPUs, the parallel nature of which would give large performance boosts to these algorithms.\r\n\r\nAs well, current CAD systems are for the most part platform dependent, usually depending on Windows. This dependency on closed source software makes it hard to improve the current state of the arts performance because of this lack of accessibility to the geometric algorithms source code.\r\n\r\ngpgmk is, to the best of my knowledge, the first geometric modeling kernel to offer GPU support for CAD algorithms.\r\n\r\n## Project Goals\r\n\r\nThe goal of this project is to implement a set of standard CAD algorithms, including filleting/rounding, chamfering, extrude, rotate, loft, sweep, union, difference, and, or, and xor.  These algorithms should be implemented with as much GPU support as possible, in order to gain the most performance from GPU utilization as possible.\r\n\r\nVisualization functionality should also be provided, so that the results of these operations can be visually verified and checked against other CAD systems.\r\n\r\nAs well, these functions should be implemented in as cross platform manner, using cross platform technologies, so that the largest number of people can take advantage of the generated product.\r\n\r\nIn short, the major goals of this project can be summarized as follows:\r\n\r\n* Implement a standard set of CAD algorithms.\r\n* Add GPU support wherever feasible to increase performance.\r\n* Use cross platform technologies wherever possible, to increase the portability of geometric modeling kernels.\r\n* Provide visualization support, so results can be visually verified.\r\n\r\n## Installation\r\n\r\n### Download\r\nFirst, please visit the downloads page on the above project website, and based on which download method you wish to use (see below), download the appropriate package.\r\n\r\n### Package Manager\r\nFrom the above project website, please download the package you wish to use. The following packages are currently supported.\r\n\r\n* `deb` packages\r\n* `rpm` packages\r\n\r\nAfter downloading the package you wish to use, follow the appropriate instructions to install it depending on your package manager.\r\n\r\n### Windows Installer\r\nA windows installer is also available through the above downloads page, and will guild you through the install process.\r\n\r\n### Building from Source\r\nIf you wish to build from source, download the source package from the downloads page, and follow the instructions found in the file INSTALL.\r\n\r\n## Authors and Contributors\r\nThis project has been developed solely by @jcmjohnmatty.\r\n\r\n## Support\r\nPlease see the [documentation](https://jcmjohnmatty.github.io/gpgmk/documentation), or contact me for more information.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}